// <auto-generated />
using System;
using AuctionService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AuctionService.Models.Migrations
{
    [DbContext(typeof(AuctionDbContext))]
    [Migration("20250209151344_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AuctionService.Models.Entities.Auctions.Auction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("AuctionEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("auction_end");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("CurrentHighBid")
                        .HasColumnType("integer")
                        .HasColumnName("current_high_bid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("ReservePrice")
                        .HasColumnType("integer")
                        .HasColumnName("reservePrice");

                    b.Property<string>("Seller")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("seller");

                    b.Property<int?>("SoldAmount")
                        .HasColumnType("integer")
                        .HasColumnName("sold_amount");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Winner")
                        .HasColumnType("text")
                        .HasColumnName("winner");

                    b.HasKey("Id");

                    b.ToTable("auction");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afbee524-5972-4075-8800-7d1f9d7b0a0c"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c8c3ec17-01bf-49db-82aa-1ef80b833a9f"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 90000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bbab4d5a-8565-48b1-9450-5ac2a5c4a654"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("155225c1-4448-4066-9886-6786536e05ea"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 50000,
                            Seller = "tom",
                            Status = 2,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("466e4744-4dc5-4987-aae0-b621acfc5e39"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 20000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dc1e4071-d19d-459b-b848-b5c3cd3d151f"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("47111973-d176-4feb-848d-0ea22641c31a"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 150000,
                            Seller = "alice",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a5011a1-fe1f-47df-9a32-b5346b289391"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 0,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("40490065-dac7-46b6-acc4-df507e0d6570"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 20000,
                            Seller = "tom",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3659ac24-29dd-407a-81f5-ecfe6f924b9b"),
                            AuctionEnd = new DateTime(2025, 3, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ReservePrice = 20000,
                            Seller = "bob",
                            Status = 0,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AuctionService.Models.Entities.Items.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("AuctionId")
                        .HasColumnType("uuid")
                        .HasColumnName("auction_id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("make");

                    b.Property<int>("Mileage")
                        .HasColumnType("integer")
                        .HasColumnName("mileage");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId")
                        .IsUnique();

                    b.ToTable("item");

                    b.HasData(
                        new
                        {
                            Id = new Guid("351032f1-e736-47e4-9085-ce2a60ac4728"),
                            AuctionId = new Guid("afbee524-5972-4075-8800-7d1f9d7b0a0c"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/05/06/16/32/car-1376190_960_720.jpg",
                            IsDeleted = false,
                            Make = "Ford",
                            Mileage = 50000,
                            Model = "GT",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("2c2960f8-97b6-4b47-86f4-58e534e1d7a6"),
                            AuctionId = new Guid("c8c3ec17-01bf-49db-82aa-1ef80b833a9f"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2012/05/29/00/43/car-49278_960_720.jpg",
                            IsDeleted = false,
                            Make = "Bugatti",
                            Mileage = 15035,
                            Model = "Veyron",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2018
                        },
                        new
                        {
                            Id = new Guid("cd5077f0-0ac9-48ed-86c2-e9265758c9bd"),
                            AuctionId = new Guid("bbab4d5a-8565-48b1-9450-5ac2a5c4a654"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2012/11/02/13/02/car-63930_960_720.jpg",
                            IsDeleted = false,
                            Make = "Ford",
                            Mileage = 65125,
                            Model = "Mustang",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2023
                        },
                        new
                        {
                            Id = new Guid("1a94e770-80cc-478b-a006-c5b5c1eb69c6"),
                            AuctionId = new Guid("155225c1-4448-4066-9886-6786536e05ea"),
                            Color = "Silver",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/04/17/22/10/mercedes-benz-1335674_960_720.png",
                            IsDeleted = false,
                            Make = "Mercedes",
                            Mileage = 15001,
                            Model = "SLK",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("62e36f6b-be60-4d16-bdaa-25e471870e7f"),
                            AuctionId = new Guid("466e4744-4dc5-4987-aae0-b621acfc5e39"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/08/31/05/47/bmw-2699538_960_720.jpg",
                            IsDeleted = false,
                            Make = "BMW",
                            Mileage = 90000,
                            Model = "X1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2017
                        },
                        new
                        {
                            Id = new Guid("bc941cc7-5f29-4b16-b5eb-b0a8f79e5501"),
                            AuctionId = new Guid("dc1e4071-d19d-459b-b848-b5c3cd3d151f"),
                            Color = "Red",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/11/09/01/49/ferrari-458-spider-2932191_960_720.jpg",
                            IsDeleted = false,
                            Make = "Ferrari",
                            Mileage = 50000,
                            Model = "Spider",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2015
                        },
                        new
                        {
                            Id = new Guid("9a74c1ab-5cd5-48da-9e07-4f145c0e6086"),
                            AuctionId = new Guid("47111973-d176-4feb-848d-0ea22641c31a"),
                            Color = "Red",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/11/08/14/39/ferrari-f430-2930661_960_720.jpg",
                            IsDeleted = false,
                            Make = "Ferrari",
                            Mileage = 5000,
                            Model = "F-430",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2022
                        },
                        new
                        {
                            Id = new Guid("0741a60b-0873-4dad-af0b-ce523639205e"),
                            AuctionId = new Guid("6a5011a1-fe1f-47df-9a32-b5346b289391"),
                            Color = "White",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2019/12/26/20/50/audi-r8-4721217_960_720.jpg",
                            IsDeleted = false,
                            Make = "Audi",
                            Mileage = 10050,
                            Model = "R8",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2021
                        },
                        new
                        {
                            Id = new Guid("fa069bbc-bb32-4846-903d-40a20ce1eb58"),
                            AuctionId = new Guid("40490065-dac7-46b6-acc4-df507e0d6570"),
                            Color = "Black",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/09/01/15/06/audi-1636320_960_720.jpg",
                            IsDeleted = false,
                            Make = "Audi",
                            Mileage = 25400,
                            Model = "TT",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("7e2c72fe-e882-40f8-a1ce-07711720ea59"),
                            AuctionId = new Guid("3659ac24-29dd-407a-81f5-ecfe6f924b9b"),
                            Color = "Rust",
                            CreatedAt = new DateTime(2025, 2, 9, 12, 0, 0, 0, DateTimeKind.Utc),
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/08/02/19/47/vintage-2573090_960_720.jpg",
                            IsDeleted = false,
                            Make = "Ford",
                            Mileage = 150150,
                            Model = "Model T",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 1938
                        });
                });

            modelBuilder.Entity("AuctionService.Models.Entities.Items.Item", b =>
                {
                    b.HasOne("AuctionService.Models.Entities.Auctions.Auction", "Auction")
                        .WithOne("Item")
                        .HasForeignKey("AuctionService.Models.Entities.Items.Item", "AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");
                });

            modelBuilder.Entity("AuctionService.Models.Entities.Auctions.Auction", b =>
                {
                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
